#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/update-checker.yml
# Description: Source code update checker with cache cleanup
#

name: Update Checker

env:
  TZ: Asia/Shanghai
  REPO_URL: https://github.com/openwrt/openwrt/
  REPO_BRANCH: openwrt-24.10

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 5

jobs:
  check:
    runs-on: ubuntu-latest

    outputs:
      status: ${{ steps.setStatusNoUpdate.outputs.status || steps.setStatusUpdateFound.outputs.status }}

    steps:

    # 获取最新提交的哈希值
    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH .
        echo "commitHash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    # 使用固定的缓存键 "latest_commit_hash"
    # 修改点：优化为固定缓存键，避免动态键生成多余缓存
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v3
      with:
        path: .commitHash
        key: latest_commit_hash   # 优化：固定缓存键
        restore-keys: |
          latest_commit_hash      # 优化：匹配同样的缓存键

    # 设置状态为代码未更新
    - name: Set Status - No Update
      if: steps.cacheHash.outputs.cache-hit == 'true'
      id: setStatusNoUpdate
      run: |
        echo "status=未检测到代码变更，无需编译固件。" >> $GITHUB_OUTPUT

    # 设置状态为代码已更新
    - name: Set Status - Update Found
      if: steps.cacheHash.outputs.cache-hit != 'true'
      id: setStatusUpdateFound
      run: |
        echo "status=检测到代码变更，正在编译固件。" >> $GITHUB_OUTPUT

    # 保存最新提交的哈希值
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash }} | tee .commitHash

    # 如果代码更新，触发 4s-auto-builder 构建任务
    - name: Trigger 4s-auto-builder
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.BUILD_TOKEN }}
        event-type: 4s-auto-builder
        client-payload: '{"triggered_by":"update-checker.yml"}'

    # 如果代码更新，触发 5s-auto-builder 构建任务
    - name: Trigger 5s-auto-builder
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.BUILD_TOKEN }}
        event-type: 5s-auto-builder
        client-payload: '{"triggered_by":"update-checker.yml"}'

    # 清理旧缓存，只保留最新的缓存
    - name: Clean up old caches
      env:
        GH_TOKEN: ${{ secrets.BUILD_TOKEN }} # 显式设置 GH_TOKEN 环境变量
      run: |
        echo "Cleaning up old caches..."
        gh api -H "Authorization: token ${{ secrets.BUILD_TOKEN }}" /repos/${{ github.repository }}/actions/caches \
        | jq -r '.actions_caches | sort_by(.last_accessed_at) | reverse | .[1:] | .[].id' \
        | xargs -I{} gh api -X DELETE -H "Authorization: token ${{ secrets.BUILD_TOKEN }}" /repos/${{ github.repository }}/actions/caches/{}
